1. What is deamon thread ?
  Ans :- It is a thread which runs in background, to create any thread as deamon thread just call setDeamon(true) method and to 
    check if this is deamon thread or not then call inDeamon() method.
    
2. Why thread communication methods wait(), notify() and notifyAll() are in Object class?
  Ans :- In the Java language, you wait() on a particular instance of an Object â€“ a monitor assigned to that object to be precise. 
    If you want to send a signal to one thread that is waiting on that specific object instance then you call notify() on that object.
    If you want to send a signal to all threads that are waiting on that object instance, you use notifyAll() on that object.

    If wait() and notify() were on the Thread instead then each thread would have to know the status of every other thread. 
    How would thread1 know that thread2 was waiting for access to a particular resource? If thread1 needed to call thread2.notify() 
    it would have to somehow find out that thread2 was waiting. There would need to be some mechanism for threads to register 
    the resources or actions that they need so others could signal them when stuff was ready or available.

3. Why wait(), notify() and notifyAll() methods have to be called from synchronized method or block?

4. Why Thread sleep() and yield() methods are static?
